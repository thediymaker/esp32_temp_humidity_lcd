#include "DHT.h"
#include <ESP8266WiFi.h>
#include "ThingSpeak.h"
#include <Wire.h> 
#include <WiFiClientSecure.h>
#define DHTPIN 12 // IMPORTANT D2 on NodeMCU is GPIO 4
#include "SSD1306.h" // alias for `#include "SSD1306Wire.h"`
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
SSD1306  display(0x3c, 4, 5); // Initialise the OLED display using Wire library
int localHum = 0;
int localTemp = 0;
int rssi = 0;

// Uncomment whatever type you're using!
#define DHTTYPE DHT11 // DHT 11
//#define DHTTYPE DHT22 // DHT 22 (AM2302), AM2321
//#define DHTTYPE DHT21 // DHT 21 (AM2301)

const char *ssid = "YOUR_SSID"; // Your wifi ssid
const char *password = "YOUR_PASSWORD"; //Your wifi password

unsigned long myChannelNumber = YOUR_CHANNEL_NUMBER;
const char * myWriteAPIKey = "YOUR_API_KEY";

const char* server = "api.thingspeak.com";

WiFiClient client;

DHT dht(DHTPIN, DHTTYPE);
void updateThingSpeak(float t, float h){
    ThingSpeak.setField(1,t);
    ThingSpeak.setField(2,h);
    ThingSpeak.writeFields(myChannelNumber,myWriteAPIKey);
    delay(20*1000);
}

void setup()
{
    // put your setup code here, to run once:
    int x=0;
    int y=0;
    Serial.begin(115200);
    dht.begin();
    ThingSpeak.begin(client);
    WiFi.begin(ssid, password);
    
    display.init();
    display.flipScreenVertically();
    display.clear();
    display.drawString(0 + x, 0 + y, "Connecting to WiFi...");
    display.display();
    
    Serial.print("...Connecting to wifi...");
    while (WiFi.status() != WL_CONNECTED) {
      Serial.print(".");
      delay(2000);
    }
    Serial.println("");
    Serial.println("WiFi connected");
    Serial.println("IP address: ");
    Serial.println(WiFi.localIP());
    
   
}

void loop()
{
  getDHT();
  display.clear();
  drawDHT(); 
  getRSSI();
  display.display();
  delay (2000);
//  if(localTemp > 80)
// {
//   post();
//  }
}

void getDHT()
{
  float tempIni = localTemp;
  float humIni = localHum;
  localTemp = dht.readTemperature(true);
  localHum = dht.readHumidity();
  if (isnan(localHum) || isnan(localTemp))   // Check if any reads failed and exit early (to try again).
  {
    Serial.println("Failed to read from DHT sensor!");
    localTemp = tempIni;
    localHum = humIni;
    return;
}

    // Compute heat index in Fahrenheit (the default)
    float hif = dht.computeHeatIndex(localTemp, localHum);

    Serial.print("Humidity: ");
    Serial.print(localHum);
    Serial.print(" %\t");
    Serial.print("Temperature: ");
    Serial.print(localTemp);
    Serial.print(" *F\t");
    Serial.print("Heat index: ");
    Serial.print(hif);
    Serial.println(" *F");

        if(client.connect(server,80)){
        updateThingSpeak(localTemp,localHum);
    }
}

void drawDHT() 
{
  int x=0;
  int y=0;

  display.setFont(ArialMT_Plain_10);
  display.setTextAlignment(TEXT_ALIGN_LEFT);
  display.drawString(0 + x, 40 + y, "WiFi Signal Strength: ");
  
  display.setFont(ArialMT_Plain_10);
  String myrssi = String(rssi) + "%";
  display.drawString(102 + x, 40 + y, myrssi);
  
  display.setFont(ArialMT_Plain_10);
  display.setTextAlignment(TEXT_ALIGN_LEFT);
  display.drawString(0 + x, 0 + y, "Hum");
  
  display.setFont(ArialMT_Plain_10);
  display.setTextAlignment(TEXT_ALIGN_LEFT);
  display.drawString(40 + x, y, "SERVERS");

  display.setFont(ArialMT_Plain_24);
  String hum = String(localHum) + "%";
  display.drawString(0 + x, 15 + y, hum);
  int humWidth = display.getStringWidth(hum);

  display.setFont(ArialMT_Plain_10);
  display.setTextAlignment(TEXT_ALIGN_LEFT);
  display.drawString(100 + x, 0  + y, "Temp");

  display.setFont(ArialMT_Plain_24);
  String temp = String(localTemp) + "Â°F";
  display.drawString(75 + x, 15 + y, temp);
  int tempWidth = display.getStringWidth(temp);

  display.setFont(ArialMT_Plain_10);
  display.drawString(20 + x, 52 + y, "595 Server Room");
}

void getRSSI()
{
  float rssiIni = rssi;
  rssi = WiFi.RSSI();
}
